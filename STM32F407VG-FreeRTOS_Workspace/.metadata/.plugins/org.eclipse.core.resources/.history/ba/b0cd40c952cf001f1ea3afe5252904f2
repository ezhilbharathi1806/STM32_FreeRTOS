//User led
// led green PD12
//led orange PD13
//led red PD14
//led blue PD15
#include "stm32f407xx.h"
#include <stdint.h>
#include "FreeRTOS.h"
#include "task.h"

#define GPIODEN  (1U<<3)

#define LED_PIN_PD12_GREEN  	(1U<<12)
#define LED_PIN_PD13_ORANGE  	(1U<<13)
#define LED_PIN_PD14_RED  		(1U<<14)
#define LED_PIN_PD15_BLUE  		(1U<<15)


TaskHandle_t xGreenLedTaskHandle;

//void greenLedTask(void *pvParameters);

int main(void){

	//enable clock access to GPIOA
	RCC->AHB1ENR |= GPIODEN;

	//set PD12 as output pin
	GPIOD->MODER |=(1<<24);
	GPIOD->MODER &=~(1<<25);

//	//set PD13 as output pin
//	GPIOD->MODER |=(1<<26);
//	GPIOD->MODER &=~(1<<27);
//
//	//set PD14 as output pin
//	GPIOD->MODER |=(1<<28);
//	GPIOD->MODER &=~(1<<29);
//
//	//set PD12 as output pin
//	GPIOD->MODER |=(1<<30);
//	GPIOD->MODER &=~(1<<31);

	xTaskCreate(greenLedTask, "green led", 128, NULL, 1, &xGreenLedTaskHandle);

//	while(1){
//		//Toggle user leds on PD12, PD13, PD14, PD15
//		GPIOD->ODR ^=(LED_PIN_PD12|LED_PIN_PD13|LED_PIN_PD14|LED_PIN_PD15);
//		for(uint32_t i=0;i<1000000; i++);
//	}

	void greenLedTask(void *pvParameters){
		while(1){
			//Toggle user leds on PD12
			GPIOD->ODR ^= LED_PIN_PD12_GREEN;
			for(uint32_t i=0;i<1000000; i++);
		}
	}
}

void greenLedTask(void *pvParameters){
	while(1){
		//Toggle user leds on PD12
		GPIOD->ODR ^= LED_PIN_PD12_GREEN;
		for(uint32_t i=0;i<1000000; i++);
	}
}
